[tool.poetry]
name = "temporal-sqlalchemy"
version = "0.1.0"
description = "Temporal Python SDK with SQL Alchemy support"
authors = ["rachfop <prachford@icloud.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
temporalio = "^1.3.0"
sqlalchemy = "^2.0.22"




[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.dev-dependencies]
black = "^22.3.0"
isort = "^5.10.1"
mypy = "^0.961"
pytest = "^7.1.2"
pytest-asyncio = "^0.18.3"




[tool.poe.tasks]
format = [{cmd = "ruff --fix ."}, {cmd = "black ."}, {cmd = "isort ."}]
lint = [{cmd = "ruff check ."}, {cmd = "black --check ."}, {cmd = "isort --check-only ."}]
lint-types = [{cmd = "mypy ."}]
test = "python -m pytest"

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "opentelemetry.*"
ignore_errors = true

[tool.ruff]
select = ["E", "F"]
line-length = 120